package GUI;

import Controlador.LogicaNegocio;
import DTOs.Contacto;
import TableModels.TablaContactos;
import java.util.Arrays;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author aranx
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        /**
         * 1) CREAR TABLA MODELO
         * 2) ASIGNÁRSELA AL JTABLE
         * 3) CREAR UN SORTER DE NUESTRO MODELO DE TABLA
         * 4) ASIGNÁRSELO A
         */
        initComponents();
        // Al crear la ventana cargamos el objeto jTable con un TableModel (este 'incorpora' los datos guardados)
        // jTable : Sólo es la interfaz gráfica, el marco sobre el que mostrar los datos guardados en el objeto TableModel
        // TableModel : Es el objeto que está 'por detrás' del jTable, el que contiene realmente la información
        // Por eso un jTable siempre hay que 'cargarlo' o 'asociarlo' con un TableModel (jTable.setModel(objetoTableModel)),
        // si no sería un elemento vacío
        // Para acceder a los datos guardados 'sacamos' el TableModel de la jTable, sería como un atributo de la misma,
        // no se crea una variable TableModel nombreVariable=new ... para trabajar con ella, sino que sería como un atributo de la jTable
        TablaContactos modeloTablaContactos = new TablaContactos(LogicaNegocio.getListaContactos());
        jT_tabla.setModel(modeloTablaContactos);
        // Creamos un objeto para que nos deje ordenar una tabla del tipo que le digamos (<TablaContactos> en este caso) por sus campos
        TableRowSorter<TablaContactos> sorter = new TableRowSorter<>(modeloTablaContactos);
        // Se lo asignamos al jTable de esta ventana
        jT_tabla.setRowSorter(sorter);
        // Le pasamos un filtro al sorter para que sólo nos muestre las filas que cumplan una condición
        /*RowFilter<Object, Object> regularExpresionFilter = RowFilter.regexFilter("000", 2);
        sorter.setRowFilter(regularExpresionFilter);*/
    }

    public JTable getjT_tabla() {
        return jT_tabla;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jL_avisos = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jT_tabla = new javax.swing.JTable();
        jL_margenDcho = new javax.swing.JLabel();
        jL_margenIzq = new javax.swing.JLabel();
        jL_mostrar = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jM_alta = new javax.swing.JMenu();
        jMenuItem_alta = new javax.swing.JMenuItem();
        jMenuItem_baja = new javax.swing.JMenuItem();
        jMenuItem_mostrar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jL_avisos.setText("Avisos: ");
        getContentPane().add(jL_avisos, java.awt.BorderLayout.PAGE_END);

        jT_tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nombre", "Apellidos", "DNI"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jT_tabla);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jL_margenDcho.setText("         ");
        getContentPane().add(jL_margenDcho, java.awt.BorderLayout.LINE_END);

        jL_margenIzq.setText("        ");
        getContentPane().add(jL_margenIzq, java.awt.BorderLayout.LINE_START);
        getContentPane().add(jL_mostrar, java.awt.BorderLayout.PAGE_START);

        jM_alta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jM_alta.setText("CONTACTO");

        jMenuItem_alta.setText("Alta...");
        jMenuItem_alta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_altaActionPerformed(evt);
            }
        });
        jM_alta.add(jMenuItem_alta);

        jMenuItem_baja.setText("Baja");
        jMenuItem_baja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_bajaActionPerformed(evt);
            }
        });
        jM_alta.add(jMenuItem_baja);

        jMenuItem_mostrar.setText("Mostrar");
        jMenuItem_mostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_mostrarActionPerformed(evt);
            }
        });
        jM_alta.add(jMenuItem_mostrar);

        jMenuBar1.add(jM_alta);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem_altaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_altaActionPerformed
        // Limpiamos posibles avisos dejados por otros eventos
        this.jL_avisos.setText("Avisos: ");
        // Creamos una ventana de alta y la hacemos visible
        VentanaCrearContacto vccNueva = new VentanaCrearContacto(this, true);
        vccNueva.setVisible(true);
    }//GEN-LAST:event_jMenuItem_altaActionPerformed

    private void jMenuItem_bajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_bajaActionPerformed
        // Limpiamos posibles avisos dejados por otros eventos
        this.jL_avisos.setText("Avisos: ");
        // Sacamos los índices de todas las filas seleccionadas en el jTable y el TableModel 
        // (los índices de ambas coinciden inicialmente, pero al hacer sort en la vista los de 
        // la JTable cambian, pero los del model se mantienen y ya no coincidirán)
        int[] filasSeleccionadasJTable = jT_tabla.getSelectedRows();
        if (filasSeleccionadasJTable.length == 0) {
            // Si el array devuelto está vacío (no hay ninguna fila seleccionada) mostramos un aviso
            this.jL_avisos.setText("¡ No hay seleccionada ninguna fila !");
        } else {
            int[] filasSeleccionadasModelo = new int[filasSeleccionadasJTable.length];
            int contador = 0;
            for (int fila : filasSeleccionadasJTable) {
                filasSeleccionadasModelo[contador] = jT_tabla.convertRowIndexToModel(fila);
                contador++;
            }
            // Ordenamos el array con los índices del modelo, si no borramos las filas en orden
            // no nos vale usar fila-contador porque puede que la fila que se borre esté antes o 
            // después de las ya borradas y de las que quedan por borrar, así que los índices
            // podrían variar decrementando en 1 o no
            //Arrays.sort(filasSeleccionadasModelo);
            TablaContactos tablaContactosModelo = (TablaContactos) jT_tabla.getModel();
            tablaContactosModelo.removeRows(filasSeleccionadasModelo);
            /*contador = 0;
            // Recorremos el array y para cada índice leído borramos la fila asociada de la tabla modelo
            for (int filaModelo : filasSeleccionadasModelo) {
            // Sacamos el objeto TablaContactos cargada con la información
            TablaContactos tablaContactosModelo = (TablaContactos) jT_tabla.getModel();
            // Los índices van cambiando al ir borrando filas, se decrementa en 1
            // el índice actualizado de las filas con respecto al valor que estamos leyendo
            //(el array contiene los valores de los índices en la SITUACIÓN INICIAL DE LAS TABLAS)
            tablaContactosModelo.removeRow(filaModelo-contador);
            contador++;
            }*/
        }
        // Refrescamos la tabla para que cargue la información de la lista del controlador actualizada tras borrar
        refrescarTabla();
    }//GEN-LAST:event_jMenuItem_bajaActionPerformed

    private void jMenuItem_mostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_mostrarActionPerformed
        jL_avisos.setText("");
        int filaSeleccionadaJTable = jT_tabla.getSelectedRow();
        if (filaSeleccionadaJTable==-1) { // No hay ninguna fila seleccionada
            jL_avisos.setText("¡ No hay seleccionada ninguna fila !");
        } else {
            int filaSeleccionadaModelo = jT_tabla.convertRowIndexToModel(filaSeleccionadaJTable);
        jL_mostrar.setText("DNI JTable:" + (String) jT_tabla.getValueAt(filaSeleccionadaJTable, 2)
                + "   DNI TablaModel(sin convertir Index):" + jT_tabla.getModel().getValueAt(filaSeleccionadaJTable, 2)
                + "   DNI TablaModel:" + jT_tabla.getModel().getValueAt(filaSeleccionadaModelo, 2));
        }
        
    }//GEN-LAST:event_jMenuItem_mostrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // ¡¡¡ Hay que ejecutar el MÉTODO REFRESCAR DE LA INTERFAZ porque si no no actualiza los datos mostrados !!!
    public void refrescarTabla() {
        // Hay que declarar primero la variable para castearla, si no no podemos usar el método propio de nuestra 
        // clase TablaContactos porque lo trata como un TableMode y no aparecen los métodos de la clase hija
        TablaContactos tablaContactos = (TablaContactos) jT_tabla.getModel();
        tablaContactos.refrescarTabla();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jL_avisos;
    private javax.swing.JLabel jL_margenDcho;
    private javax.swing.JLabel jL_margenIzq;
    private javax.swing.JLabel jL_mostrar;
    private javax.swing.JMenu jM_alta;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem_alta;
    private javax.swing.JMenuItem jMenuItem_baja;
    private javax.swing.JMenuItem jMenuItem_mostrar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jT_tabla;
    // End of variables declaration//GEN-END:variables
}

package GUI;

import Controlador.LogicaNegocio;
import TableModels.TablaContactos;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.TableRowSorter;

public class VentanaPrincipal extends javax.swing.JFrame {

    public VentanaPrincipal() {
        // Para definir el aspecto de esta pantalla (Nimbus, Metal,... en WINDOWS)
        // ANTES DE initComponents() ! Si se hace después hay que refrescar la pantalla
        // para que aplique los cambios de la apariencia
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        // Asignamos al jTable un model de nuestra clase TablaContactos, que contendrá la lista del controlador
        TablaContactos modeloTablaContactos = new TablaContactos(LogicaNegocio.getListaContactos());
        jT_tabla.setModel(modeloTablaContactos);
        // Creamos un objeto para que nos deje ordenar una tabla del tipo que le digamos (<TablaContactos> en este caso) por sus campos
        TableRowSorter<TablaContactos> sorter = new TableRowSorter<>(modeloTablaContactos);
        // Se lo asignamos al jTable de esta ventana
        jT_tabla.setRowSorter(sorter);
        // Le pasamos un filtro al sorter para que sólo nos muestre las filas que cumplan una condición
        // Pasamos como parámetros el patrón a cumplir, y la columna a la que afecta
        /*RowFilter<Object, Object> regularExpresionFilter = RowFilter.regexFilter("000", 2);
        sorter.setRowFilter(regularExpresionFilter);*/
    }

    public JTable getjT_tabla() {
        return jT_tabla;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jL_avisos = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jT_tabla = new javax.swing.JTable();
        jL_margenDcho = new javax.swing.JLabel();
        jL_margenIzq = new javax.swing.JLabel();
        jL_mostrar = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jM_alta = new javax.swing.JMenu();
        jMenuItem_alta = new javax.swing.JMenuItem();
        jMenuItem_baja = new javax.swing.JMenuItem();
        jMenuItem_mostrar = new javax.swing.JMenuItem();
        jMenuItem_apariencia = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jL_avisos.setText("Avisos: ");
        getContentPane().add(jL_avisos, java.awt.BorderLayout.PAGE_END);

        jT_tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nombre", "Apellidos", "DNI"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jT_tabla);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jL_margenDcho.setText("         ");
        getContentPane().add(jL_margenDcho, java.awt.BorderLayout.LINE_END);

        jL_margenIzq.setText("        ");
        getContentPane().add(jL_margenIzq, java.awt.BorderLayout.LINE_START);
        getContentPane().add(jL_mostrar, java.awt.BorderLayout.PAGE_START);

        jM_alta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jM_alta.setText("CONTACTO");

        jMenuItem_alta.setText("Alta...");
        jMenuItem_alta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_altaActionPerformed(evt);
            }
        });
        jM_alta.add(jMenuItem_alta);

        jMenuItem_baja.setText("Baja");
        jMenuItem_baja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_bajaActionPerformed(evt);
            }
        });
        jM_alta.add(jMenuItem_baja);

        jMenuItem_mostrar.setText("Mostrar");
        jMenuItem_mostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_mostrarActionPerformed(evt);
            }
        });
        jM_alta.add(jMenuItem_mostrar);

        jMenuItem_apariencia.setText("Cambiar apariencia...");
        jMenuItem_apariencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_aparienciaActionPerformed(evt);
            }
        });
        jM_alta.add(jMenuItem_apariencia);

        jMenuBar1.add(jM_alta);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem_altaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_altaActionPerformed
        // Limpiamos posibles avisos dejados por otros eventos
        this.jL_avisos.setText("Avisos: ");
        // Creamos una ventana de alta y la hacemos visible
        VentanaCrearContacto vccNueva = new VentanaCrearContacto(this, true);
        vccNueva.setVisible(true);
    }//GEN-LAST:event_jMenuItem_altaActionPerformed

    private void jMenuItem_bajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_bajaActionPerformed
        // Limpiamos posibles avisos dejados por otros eventos
        this.jL_avisos.setText("Avisos: ");
        // Sacamos los índices de todas las filas seleccionadas en el jTable
        int[] filasSeleccionadasJTable = jT_tabla.getSelectedRows();
        // Sacamos los índices equivalentes en el TableModel (al ordenar el jTable, no coincidirán)
        if (filasSeleccionadasJTable.length == 0) {
            // Si el array devuelto está vacío (no hay ninguna fila seleccionada) mostramos un aviso
            this.jL_avisos.setText("¡ No hay seleccionada ninguna fila !");
        } else {
            int[] filasSeleccionadasModelo = new int[filasSeleccionadasJTable.length];
            int contador = 0;
            for (int fila : filasSeleccionadasJTable) {
                filasSeleccionadasModelo[contador] = jT_tabla.convertRowIndexToModel(fila);
                contador++;
            }
            TablaContactos tablaContactosModelo = (TablaContactos) jT_tabla.getModel();
            tablaContactosModelo.removeRows(filasSeleccionadasModelo);
        }
        // Refrescamos la tabla para que cargue la información actualizada tras borrar
        refrescarTabla();
    }//GEN-LAST:event_jMenuItem_bajaActionPerformed

    private void jMenuItem_mostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_mostrarActionPerformed
        int filaSeleccionadaJTable = jT_tabla.getSelectedRow();
        int filaSeleccionadaModelo = jT_tabla.convertRowIndexToModel(filaSeleccionadaJTable);
        jL_mostrar.setText("DNI JTable:" + (String) jT_tabla.getValueAt(filaSeleccionadaJTable, 2)
                + "   DNI TablaModel(sin IndexConvert):" + jT_tabla.getModel().getValueAt(filaSeleccionadaJTable, 2)
                + "   DNI TablaModel(con IndexConvert):" + jT_tabla.getModel().getValueAt(filaSeleccionadaModelo, 2));
    }//GEN-LAST:event_jMenuItem_mostrarActionPerformed

    private void jMenuItem_aparienciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_aparienciaActionPerformed
        VentanaApariencia ventanaApariencia = new VentanaApariencia(this, false);
        ventanaApariencia.setVisible(true);
    }//GEN-LAST:event_jMenuItem_aparienciaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // ¡¡¡ Hay que ejecutar el MÉTODO REFRESCAR DE LA INTERFAZ porque si no no actualiza los datos mostrados !!!
    public void refrescarTabla() {
        // Hay que declarar primero la variable para castearla, si no no podemos usar el método propio de nuestra 
        // clase TablaContactos porque lo trata como un TableMode y no aparecen los métodos de la clase hija
        TablaContactos tablaContactos = (TablaContactos) jT_tabla.getModel();
        tablaContactos.refrescarTabla();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jL_avisos;
    private javax.swing.JLabel jL_margenDcho;
    private javax.swing.JLabel jL_margenIzq;
    private javax.swing.JLabel jL_mostrar;
    private javax.swing.JMenu jM_alta;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem_alta;
    private javax.swing.JMenuItem jMenuItem_apariencia;
    private javax.swing.JMenuItem jMenuItem_baja;
    private javax.swing.JMenuItem jMenuItem_mostrar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jT_tabla;
    // End of variables declaration//GEN-END:variables
}

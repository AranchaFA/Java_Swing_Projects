/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fondoPersonalizado;

import java.awt.Color;
import java.io.File;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;

/**
 *
 * @author aranx
 */
public class FondoPersonalizadoPanel extends javax.swing.JPanel {

    public FondoPersonalizadoPanel() {
        initComponents();
    }
    
    public PropiedadesFondo getPropiedadesFondo(){
        // Habría que comprobar que la ruta del textField o el color sean correctos
        if (jTF_imagen.getText()!=null) {            
            File ficheroSeleccionado=new File(jTF_imagen.getText());
            PropiedadesFondo propiedadesFondo=new PropiedadesFondo(ficheroSeleccionado, null);
            return propiedadesFondo;
        } else {
            Color colorSeleccionado=new Color(Integer.valueOf(jTF_color.getText()));
            PropiedadesFondo propiedadesFondo=new PropiedadesFondo(null, colorSeleccionado);
            return propiedadesFondo;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTF_color = new javax.swing.JTextField();
        jTF_imagen = new javax.swing.JTextField();
        jB_color = new javax.swing.JButton();
        jB_imagen = new javax.swing.JButton();

        jB_color.setText("Color");
        jB_color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_colorActionPerformed(evt);
            }
        });

        jB_imagen.setText("Imagen");
        jB_imagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_imagenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTF_color, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                    .addComponent(jTF_imagen))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jB_imagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jB_color, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTF_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jB_color))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTF_imagen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jB_imagen))
                .addContainerGap(42, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jB_colorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_colorActionPerformed
        // Para sacar el color del textField habría que comprobar que el patrón escrito corresponda a un colorRGB
        Color colorPreseleccionado=jTF_color.getText()!=null?new Color(Integer.valueOf(jTF_color.getText())):Color.lightGray;
        Color colorSeleccionado = JColorChooser.showDialog(this, "Color de fondo", colorPreseleccionado);
        jTF_color.setText(String.valueOf(colorSeleccionado.getRGB()));
        jTF_color.setForeground(colorSeleccionado);
    }//GEN-LAST:event_jB_colorActionPerformed

    private void jB_imagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_imagenActionPerformed
        JFileChooser jFileChooser=new JFileChooser();
        jFileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int respuesta = jFileChooser.showDialog(this, "Imagen de fondo");
        if (respuesta==JFileChooser.APPROVE_OPTION) {
            File ficheroSeleccionado=jFileChooser.getSelectedFile();
            jTF_imagen.setText(ficheroSeleccionado.getAbsolutePath());
        }
    }//GEN-LAST:event_jB_imagenActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB_color;
    private javax.swing.JButton jB_imagen;
    private javax.swing.JTextField jTF_color;
    private javax.swing.JTextField jTF_imagen;
    // End of variables declaration//GEN-END:variables
}
